os: linux

dist: xenial

sudo: required

git:
  depth: 3

addons:
  apt:
    update:
    - true

before_install:
  - sudo apt-get -qq update -y && sudo apt-get -q install python gnupg flex bison gperf libsdl1.2-dev squashfs-tools build-essential zip libncurses5-dev zlib1g-dev openjdk-8-jre openjdk-8-jdk pngcrush schedtool libxml2 libxml2-utils xsltproc lzop libc6-dev g++-multilib lib32z1-dev lib32ncurses5-dev gcc-multilib liblz4-* pngquant ncurses-dev texinfo gcc gperf patch libtool automake g++ gawk subversion expat libexpat1-dev python-all-dev bc libcloog-isl-dev libcap-dev autoconf libgmp-dev build-essential pkg-config libmpc-dev libmpfr-dev lzma* liblzma* w3m adb fastboot maven ncftp htop imagemagick libssl-dev clang cmake axel git-core libesd0-dev curl schedtool figlet libesd0-dev -y
  - git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 ~/toolchain/
  - sudo chmod -R a+x ~/toolchain/*

install: true

script:
  - mkdir out
  - make O=out clean
  - make O=out mrproper
  - export CROSS_COMPILE=~/toolchain/bin/aarch64-linux-android-
  - export ARCH=arm64 
  - export KBUILD_BUILD_USER="fr3aky"
  - export KBUILD_BUILD_HOST="Phantom_Zone"
  - export ARCH_MTK_PLATFORM=mt6735
  - make O=out ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE gnsz6753_66_n_defconfig
  - make O=out ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE -j32
  - KERNEL_DIR=$PWD
  - ZIMAGE=$KERNEL_DIR/out/arch/arm64/boot/*Image*

after_success:
  - cd $KERNEL_DIR/out
  - curl --upload-file arch/arm64/boot/Image.gz https://transfer.sh/gnsz6753_66_n_defconfig-zImage

deploy:
  skip_cleanup: true
  provider: releases
  api_key: "$GitOAUTHToken"
  file_glob: true
  file: $KERNEL_DIR/out/arch/arm64/boot/*Image*
  on:
    tags: false
    repo: ZeoRexDevs/android_kernel_condor_a8
    branch: nougat-test2

branches:
  except:
    - /^(?i:untagged)-.*$/
